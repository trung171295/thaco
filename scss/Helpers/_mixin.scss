@mixin size($width:null,$height:null){
	width: $width;
	height: $height;
}
@mixin img-fit($value1,$value2,$value3:null){
	@if($value1 == null){
		width: $value1;
		max-width: $value2;
		object-fit: $value3;
	}
	@else{
		width: $value1;
		width: $value1;
		max-width: $value2;
		object-fit: $value3;
	}

}
@mixin mh($value) {
	max-height: $value;
	min-height: $value;
}
@mixin transform($pro...) {
	transform: $pro;
	-webkit-transform: $pro;
	-moz-transform: $pro;
}
@mixin transition($pro...) {
	transition: $pro;
	-webkit-transition: $pro;
	-moz-transition: $pro;
}
@mixin box-sizing($pro) {
	box-sizing: $pro;
	-webkit-box-sizing: $pro;
	-moz-box-sizing: $pro;
}
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
	@if $inset {
		box-shadow: inset $top $left $blur $color;
	} @else {
		box-shadow: $top $left $blur $color;
	}
}
@mixin before($pro:null,$top:null,$left:null,$right:null,$bottom:null) {
	content:$pro;
	position: absolute;
	top: $top;
	left: $left;
	right: $right;
	bottom:$bottom;
}
@mixin text($value:null,$lh:null,$transform:null,$decor:null){
	font: $value;
	line-height: $lh;
	text-transform: $transform;
	text-decoration: $decor;
}
@mixin flex($content:null,$item:null){
	display: flex;
	justify-content: $content;
	align-items: $item;
}
@mixin grid($value1,$value2,$value3:null,$value4:null) {
	display: grid;
	grid-template-columns: $value1;
	grid-template-rows: $value2;
	justify-content: $value3;
	align-items: $value4;
}
@mixin animation ($animation,$duration,$timing,$delay,$count) {
	-webkit-animation-name: $animation;
	-webkit-animation-duration: $duration;
	-webkit-animation-timing-function:$timing;
	-webkit-animation-delay: $delay;
	-webkit-animation-iteration-count:$count;

	-moz-animation-name: $animation;
	-moz-animation-duration: $duration;
	-moz-animation-timing-function:$timing;
	-moz-animation-delay: $delay;
	-moz-animation-iteration-count:$count;

	-o-animation-name: $animation;
	-o-animation-duration: $duration;
	-o-animation-timing-function:$timing;
	-o-animation-delay: $delay;
	-o-animation-iteration-count:$count;

	animation-name: $animation;
	animation-duration: $duration;
	animation-timing-function:$timing;
	animation-delay: $delay;
	animation-iteration-count:$count;
}

@mixin prefix($property, $value, $prefixes: ()) {
	@each $prefix in $prefixes {
	  #{'-' + $prefix + '-' + $property}: $value;
	}
  
	// Output standard non-prefixed declaration
	#{$property}: $value;
  }
  

  //responsive
  @mixin mobile-sm{
	@media (max-width: 360px) {
		@content;
	}
} 
@mixin mobile {
	@media (max-width: 599px) {
		@content;
	}
}
@mixin tablet{
	@media screen and (min-width: 600px) and (max-width:992px) {
		@content;
	}
}
@mixin tablet-lg {
	@media (min-width: 900px) {
		@content;
	}
}
@mixin desktop {
	@media (min-width: 1200px) {
		@content;
	}
}